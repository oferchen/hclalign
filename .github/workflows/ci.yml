name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['1.23', '1.22']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - run: go mod download
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Govulncheck
        run: govulncheck ./...
        continue-on-error: true
      - run: go test -race -shuffle=on -cover -coverprofile=coverage.out ./...
      - run: go build ./...
      - run: make cover

  terraform-fmt:
    name: Terraform fmt equivalence
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      - run: go mod download
      - run: go test ./internal/fmt -run TestGoMatchesBinary
