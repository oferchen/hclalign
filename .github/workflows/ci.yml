name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: [1.23.x, 1.22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true
      - run: make init
      - run: make tidy
      - run: make fmt
      - run: make strip
      - run: make lint
      - run: make vet
      - run: make test-race
      - run: make cover
        env:
          MINCOV: 95
      - run: make build
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.go }}
          path: .build/coverage.out
      - run: go run ./cmd/hclalign --check tests/cases
      - name: Fuzz tests
        run: go test ./... -run=^$ -fuzz=Fuzz -fuzztime=5s
        continue-on-error: true
      - name: Vulnerability check
        run: go run golang.org/x/vuln/cmd/govulncheck@latest ./...
        continue-on-error: true

  terraform-fmt:
    name: Terraform fmt equivalence
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
      - run: go test ./internal/fmt -run TestGoMatchesBinary
