# .golangci.yml â€” compatible with golangci-lint >= v1.60
# Purpose: fast, reproducible linting with pragmatic rules. Optionals are commented.

run:
  timeout: 5m
  tests: true
  allow-parallel-runners: true
  # Optional: limit packages to speed up CI (uncomment & edit)
  # packages:
  #   - ./...
  # Optional: add custom build tags if you use them
  # build-tags:
  #   - integration

output:
  # one of: line-number, colored-line-number, tab, checkstyle, json, junit-xml, code-climate, sarif
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: false
  # Optional CI-focused formats (uncomment for SARIF upload to code scanning)
  # formats:
  #   - format: sarif
  #     path: ./lint.sarif

linters:
  enable:
    - govet
    - staticcheck
    - gosimple
    - ineffassign
    - revive
    - gocritic
    - gofmt
    - goimports
    - goconst
    - misspell
    - errcheck
    - unused
    - typecheck
    - asciicheck
    - unconvert
    - gosec           # Optional security checks; tune in linters-settings.gosec
    - exportloopref   # catches loop variable capture bugs
    - sloglint        # if you use log/slog (harmless if not)
  disable:
    # Disable noisy or overlapping linters here if they fight with your code style.
    # - dupl
    # - gocyclo
    # - funlen

linters-settings:
  revive:
    severity: warning
    rules:
      - name: indent-error-flow
      - name: errorf
      - name: exported
        arguments: [ "checkPrivateReceivers" ]
      - name: receiver-naming
      - name: time-naming
  gocritic:
    enabled-tags: [ diagnostic, performance, style ]
    disabled-checks:
      - hugeParam
  errcheck:
    check-type-assertions: true
    check-blank: true
    # Optional: add allow list for common deliberate ignores (context cancel, Close errors)
    # exclude-functions:
    #   - (*net/http.Server).Shutdown
    #   - (io.Closer).Close
  gofmt:
    simplify: true
  goimports:
    local-prefixes: github.com/your/module   # Optional: set to your module path
  misspell:
    locale: US
  goconst:
    min-len: 3
    min-occurrences: 3
  gosec:
    severity: medium
    confidence: medium
    # Optional: exclude noisy rules
    excludes:
      - G115  # integer conversion precision loss
      - G304  # file path provided as taint input (often noisy in tests/tools)
  staticcheck:
    checks: [ "all" ]
    # Optional: selectively ignore specific SA* checks if you must
    # go: "1.22" # set your target if needed
  unused:
    check-exported: false
  typecheck:
    error-func: ''
  unconvert:
    fast: true

issues:
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0

  # Optional: focus reports by excluding generated, vendor, or testdata directories
  exclude-dirs:
    - vendor
    - testdata
    - .git
    - .github

  # Optional: fine-grained exclusions
  exclude-rules:
    - path: _test\.go
      linters: [ gocyclo, funlen, gosec ]
    - linters: [ errcheck ]
      text: "Close.*error"   # allow ignored Close() errors in selective places

# Optional: per-package/dir overrides (stricten / relax rules)
# Annotations apply to the directory containing this file and its children.
# You can add another .golangci.yml deeper in the tree for different settings.

# Optional: caching tweaks (golangci-lint has internal cache; good defaults already)
# service:
#   golangci-lint-version: 1.60.x
#   prepare:
#     - echo "Preparing environment..."
